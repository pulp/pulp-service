From 5063951a1b42058307df4ea6defcdae0a722c97b Mon Sep 17 00:00:00 2001
From: Dennis Kliban <dkliban@redhat.com>
Date: Mon, 21 Jul 2025 07:59:20 -0400
Subject: [PATCH] add profiling to the worker's run method

---
 pulpcore/tasking/worker.py | 27 ++++++++++++++++++++++++++-
 1 file changed, 26 insertions(+), 1 deletion(-)

diff --git a/pulpcore/tasking/worker.py b/pulpcore/tasking/worker.py
index dd61cd6ff..d3a4667f6 100644
--- a/pulpcore/tasking/worker.py
+++ b/pulpcore/tasking/worker.py
@@ -27,7 +27,7 @@ from pulpcore.constants import (
 from pulpcore.metrics import init_otel_meter
 from pulpcore.app.apps import pulp_plugin_configs
 from pulpcore.app.models import Worker, Task, ApiAppStatus, ContentAppStatus
-from pulpcore.app.util import PGAdvisoryLock, get_domain
+from pulpcore.app.util import PGAdvisoryLock, get_domain, get_artifact_url
 from pulpcore.exceptions import AdvisoryLockError
 
 from pulpcore.tasking.storage import WorkerDirectory
@@ -38,6 +38,10 @@ from pulpcore.tasking._util import (
     startup_hook,
 )
 
+from pyinstrument import Profiler
+from pulpcore.app.models import Artifact, ContentArtifact, Domain
+from pulp_file.app.models import FileContent
+
 _logger = logging.getLogger(__name__)
 random.seed()
 
@@ -541,7 +545,10 @@ class PulpcoreWorker:
                 self.handle_available_tasks()
             else:
                 self.cursor.execute("LISTEN pulp_worker_wakeup")
+                count = 0
                 while not self.shutdown_requested:
+                    profiler = Profiler(interval=0.002)
+                    profiler.start()
                     # do work
                     if self.shutdown_requested:
                         break
@@ -550,6 +557,24 @@ class PulpcoreWorker:
                         break
                     # rest until notified to wakeup
                     self.sleep()
+                    profiler.stop()
+                    html_report = profiler.output_html()
+                    filename = f'pyinstrument-profile-{self.name}-{count}.html'
+                    with open(filename, 'w') as f:
+                        f.write(html_report)
+                        f.flush()
+                    # Create a Pulp artifact
+                    artifact = Artifact.init_and_validate(filename)
+                    artifact.save()
+                    # Create File Content from artifact
+                    domain = Domain.objects.get(name='default')
+                    content = FileContent(relative_path=filename, digest=artifact.sha256, _pulp_domain=domain)
+                    content.save()
+                    content_artifact = ContentArtifact(content=content, artifact=artifact, relative_path=filename)
+                    content_artifact.save()
+                    os.remove(filename)
+                    _logger.info(f"{self.name} profile saved. {filename} - {get_artifact_url(artifact)}")
+                    count += 1
                 self.cursor.execute("UNLISTEN pulp_worker_wakeup")
             self.cursor.execute("UNLISTEN pulp_worker_metrics_heartbeat")
             self.cursor.execute("UNLISTEN pulp_worker_cancel")
-- 
2.50.0

