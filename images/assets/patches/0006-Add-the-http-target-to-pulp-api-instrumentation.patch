--- opentelemetry/instrumentation/wsgi/__init__.py	2024-10-22 15:07:27.828757765 +0200
+++ opentelemetry/instrumentation/wsgi/__init__.py	2024-10-22 15:07:39.417039530 +0200
@@ -207,6 +207,8 @@
 ---
 """
 
+import re
+import urllib.parse
 import functools
 import typing
 import wsgiref.util as wsgiref_util
@@ -266,6 +268,10 @@
 _CARRIER_KEY_PREFIX = "HTTP_"
 _CARRIER_KEY_PREFIX_LEN = len(_CARRIER_KEY_PREFIX)
 
+# it is useful to separate the domain and uuid patterns because some URLs might not include the uuid
+domain_pattern = re.compile(r"pulp\/([a-zA-Z0-9_-]{1,50})\/api\/v3\/")
+uuid_pattern = re.compile(r"[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}")
+
 
 class WSGIGetter(Getter[dict]):
     def get(
@@ -350,7 +356,10 @@
         target = environ.get("REQUEST_URI")
     if target:
         path, query = _parse_url_query(target)
-        _set_http_target(result, target, path, query, sem_conv_opt_in_mode)
+        unquoted_path = urllib.parse.unquote(path)
+        new_path = domain_pattern.sub(r"pulp/{domain}/api/v3/", unquoted_path)
+        new_path = uuid_pattern.sub("{uuid}", new_path)
+        _set_http_target(result, new_path, path, query, sem_conv_opt_in_mode)
     else:
         # old semconv v1.20.0
         if _report_old(sem_conv_opt_in_mode):


--- opentelemetry/instrumentation/_semconv.py	2024-10-22 15:08:25.147151435 +0200
+++ opentelemetry/instrumentation/_semconv.py	2024-10-22 15:08:34.443377466 +0200
@@ -75,6 +75,7 @@
     SpanAttributes.HTTP_HOST,
     SpanAttributes.HTTP_SCHEME,
     SpanAttributes.HTTP_STATUS_CODE,
+    SpanAttributes.HTTP_TARGET,
     SpanAttributes.HTTP_FLAVOR,
     SpanAttributes.HTTP_SERVER_NAME,
     SpanAttributes.NET_HOST_NAME,

