From ae32f2e408e53dcb1614c4552bf441c287dc57ea Mon Sep 17 00:00:00 2001
From: Grant Gainey <ggainey@redhat.com>
Date: Thu, 24 Apr 2025 10:37:42 -0400
Subject: [PATCH] Revert "[PULP-270] Validate and clean comments from Remote
 certs."

This reverts commit 75461808386e4dc1e60646b4e4c86b2c002386d5.

fixes #6510.
---
 CHANGES/6510.bugfix                           |  1 +
 .../functional/api/test_remote_settings.py    | 67 +------------------
 pulpcore/app/serializers/repository.py        | 36 ----------
 3 files changed, 3 insertions(+), 101 deletions(-)
 create mode 100644 CHANGES/6510.bugfix

diff --git a/CHANGES/6510.bugfix b/CHANGES/6510.bugfix
new file mode 100644
index 000000000..c78809958
--- /dev/null
+++ b/CHANGES/6510.bugfix
@@ -0,0 +1 @@
+Reverted fix for #6491, it broke certificate-chains.
diff --git a/pulp_file/tests/functional/api/test_remote_settings.py b/pulp_file/tests/functional/api/test_remote_settings.py
index f8126714f..21a5c6ca2 100644
--- a/pulp_file/tests/functional/api/test_remote_settings.py
+++ b/pulp_file/tests/functional/api/test_remote_settings.py
@@ -1,52 +1,10 @@
-import pytest
 import uuid
 
+import pytest
+
 from pulpcore.client.pulp_file import (
     RepositorySyncURL,
 )
-from pulpcore.client.pulp_file.exceptions import BadRequestException
-
-GOOD_CERT = """-----BEGIN CERTIFICATE-----
-MIICoDCCAYgCCQC2c2uY34HNlzANBgkqhkiG9w0BAQUFADASMRAwDgYDVQQDDAdn
-b3ZlZ2FuMB4XDTE5MDMxMzIxMDMzMFoXDTM4MDYxNjIxMDMzMFowEjEQMA4GA1UE
-AwwHZ292ZWdhbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANEatWsZ
-1iwGmTxD02dxMI4ci+Au4FzvmWLBWD07H5GGTVFwnqmNOKhP6DHs1EsMZevkUvaG
-CRxZlPYhjNFLZr2c2FnoDZ5nBXlSW6sodXURbMfyT187nDeBXVYFuh4T2eNCatnm
-t3vgdi+pWsF0LbOgpu7GJI2sh5K1imxyB77tJ7PFTDZCSohkK+A+0nDCnJqDUNXD
-5CK8iaBciCbnzp3nRKuM2EmgXno9Repy/HYxIgB7ZodPwDvYNjMGfvs0s9mJIKmc
-CKgkPXVO9y9gaRrrytICcPOs+YoU/PN4Ttg6wzxaWvJgw44vsR8wM/0i4HlXfBdl
-9br+cgn8jukDOgECAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAyNHV6NA+0GfUrvBq
-AHXHNnBE3nzMhGPhF/0B/dO4o0n6pgGZyzRxaUaoo6+5oQnBf/2NmDyLWdalFWX7
-D1WBaxkhK+FU922+qwQKhABlwMxGCnfZ8F+rlk4lNotm3fP4wHbnO1SGIDvvZFt/
-mpMgkhwL4lShUFv57YylXr+D2vSFcAryKiVGk1X3sHMXlFAMLHUm3d97fJnmb1qQ
-wC43BlJCBQF98wKtYNwTUG/9gblfk8lCB2DL1hwmPy3q9KbSDOdUK3HW6a75ZzCD
-6mXc/Y0bJcwweDsywbPBYP13hYUcpw4htcU6hg6DsoAjLNkSrlY+GGo7htx+L9HH
-IwtfRg==
------END CERTIFICATE-----
-"""
-
-GOOD_CERT_WITH_COMMENT = """saydas Interm√©diaire CA
------BEGIN CERTIFICATE-----
-MIICoDCCAYgCCQC2c2uY34HNlzANBgkqhkiG9w0BAQUFADASMRAwDgYDVQQDDAdn
-b3ZlZ2FuMB4XDTE5MDMxMzIxMDMzMFoXDTM4MDYxNjIxMDMzMFowEjEQMA4GA1UE
-AwwHZ292ZWdhbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANEatWsZ
-1iwGmTxD02dxMI4ci+Au4FzvmWLBWD07H5GGTVFwnqmNOKhP6DHs1EsMZevkUvaG
-CRxZlPYhjNFLZr2c2FnoDZ5nBXlSW6sodXURbMfyT187nDeBXVYFuh4T2eNCatnm
-t3vgdi+pWsF0LbOgpu7GJI2sh5K1imxyB77tJ7PFTDZCSohkK+A+0nDCnJqDUNXD
-5CK8iaBciCbnzp3nRKuM2EmgXno9Repy/HYxIgB7ZodPwDvYNjMGfvs0s9mJIKmc
-CKgkPXVO9y9gaRrrytICcPOs+YoU/PN4Ttg6wzxaWvJgw44vsR8wM/0i4HlXfBdl
-9br+cgn8jukDOgECAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAyNHV6NA+0GfUrvBq
-AHXHNnBE3nzMhGPhF/0B/dO4o0n6pgGZyzRxaUaoo6+5oQnBf/2NmDyLWdalFWX7
-D1WBaxkhK+FU922+qwQKhABlwMxGCnfZ8F+rlk4lNotm3fP4wHbnO1SGIDvvZFt/
-mpMgkhwL4lShUFv57YylXr+D2vSFcAryKiVGk1X3sHMXlFAMLHUm3d97fJnmb1qQ
-wC43BlJCBQF98wKtYNwTUG/9gblfk8lCB2DL1hwmPy3q9KbSDOdUK3HW6a75ZzCD
-6mXc/Y0bJcwweDsywbPBYP13hYUcpw4htcU6hg6DsoAjLNkSrlY+GGo7htx+L9HH
-IwtfRg==
------END CERTIFICATE-----
-"""
-
-BAD_CERT = """-----BEGIN CERTIFICATE-----\nBOGUS==\n-----END CERTIFICATE-----
-"""
 
 
 def _run_basic_sync_and_assert(file_bindings, remote, file_repo, monitor_task):
@@ -253,24 +211,3 @@ def test_header_for_sync(
     assert requests_record[0].path == "/basic/PULP_MANIFEST"
     assert header_name in requests_record[0].headers
     assert header_value == requests_record[0].headers[header_name]
-
-
-@pytest.mark.parallel
-def test_certificate_clean(file_remote_factory):
-    # Check that a good cert validates
-    a_remote = file_remote_factory(url="http://example.com/", ca_cert=GOOD_CERT)
-    assert a_remote.ca_cert == GOOD_CERT
-    a_remote = file_remote_factory(url="http://example.com/", client_cert=GOOD_CERT)
-    assert a_remote.client_cert == GOOD_CERT
-
-    # Check that a good-cert-with-comments validates and strips the comments
-    a_remote = file_remote_factory(url="http://example.com/", ca_cert=GOOD_CERT_WITH_COMMENT)
-    assert a_remote.ca_cert == GOOD_CERT
-    a_remote = file_remote_factory(url="http://example.com/", client_cert=GOOD_CERT_WITH_COMMENT)
-    assert a_remote.client_cert == GOOD_CERT
-
-    # Check that a bad-cert gets rejected
-    with pytest.raises(BadRequestException):
-        a_remote = file_remote_factory(url="http://example.com/", ca_cert=BAD_CERT)
-    with pytest.raises(BadRequestException):
-        a_remote = file_remote_factory(url="http://example.com/", client_cert=BAD_CERT)
diff --git a/pulpcore/app/serializers/repository.py b/pulpcore/app/serializers/repository.py
index f25777b78..0dd86f9b8 100644
--- a/pulpcore/app/serializers/repository.py
+++ b/pulpcore/app/serializers/repository.py
@@ -1,6 +1,4 @@
-import OpenSSL
 import os
-
 from gettext import gettext as _
 from urllib.parse import urlparse
 
@@ -74,34 +72,6 @@ class RepositorySerializer(ModelSerializer):
         )
 
 
-def validate_certificate(which_cert, value):
-    """
-    Validate and return *just* the cert and not any commentary that came along with it.
-
-    Args:
-        which_cert: The attribute-name whose cert we're validating (only used for error-message).
-        value: The string being proposed as a certificate.
-
-    Raises:
-        ValidationError: When the provided value can't be interpreted as a certificate.
-
-    Returns:
-        The cert-string with *just* the validated BEGIN/END CERTIFICATE segments.
-    """
-    if value:
-        try:
-            # Let OpenSSL validate and clean the proposed cert.
-            cleansed_str = OpenSSL.crypto.dump_certificate(
-                OpenSSL.crypto.FILETYPE_PEM,
-                OpenSSL.crypto.load_certificate(OpenSSL.crypto.FILETYPE_PEM, bytes(value, "UTF-8")),
-            ).decode("ASCII")
-            return cleansed_str
-        except OpenSSL.crypto.Error as e:
-            raise serializers.ValidationError(
-                _("Invalid {} specified, error '{}'").format(which_cert, e.args)
-            )
-
-
 class RemoteSerializer(ModelSerializer, HiddenFieldsMixin):
     """
     Every remote defined by a plugin should have a Remote serializer that inherits from this
@@ -301,12 +271,6 @@ class RemoteSerializer(ModelSerializer, HiddenFieldsMixin):
             raise serializers.ValidationError(_("proxy_url must not contain credentials"))
         return value
 
-    def validate_ca_cert(self, value):
-        return validate_certificate("ca_cert", value)
-
-    def validate_client_cert(self, value):
-        return validate_certificate("client_cert", value)
-
     def validate(self, data):
         """
         Check, that proxy credentials are only provided completely and if a proxy is configured.
-- 
2.46.2

