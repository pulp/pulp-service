From 4770da396bd116d3a86cd47840dc06f54875fcf8 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andr=C3=A9=20=22decko=22=20de=20Brito?= <decko@redhat.com>
Date: Fri, 18 Jul 2025 13:25:33 -0300
Subject: [PATCH] Patch some functions to emit a log about their execution
 time.

---
 pulpcore/tasking/worker.py | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/pulpcore/tasking/worker.py b/pulpcore/tasking/worker.py
index dd61cd6ff..a6c5ae559 100644
--- a/pulpcore/tasking/worker.py
+++ b/pulpcore/tasking/worker.py
@@ -7,6 +7,8 @@ import select
 import signal
 import socket
 import contextlib
+import functools
+import time
 from datetime import datetime, timedelta
 from multiprocessing import Process
 from tempfile import TemporaryDirectory
@@ -41,6 +43,18 @@ from pulpcore.tasking._util import (
 _logger = logging.getLogger(__name__)
 random.seed()
 
+
+def log_execution_time(func):
+    """A decorator to log the execution time of a function."""
+    @functools.wraps(func)
+    def wrapper(*args, **kwargs):
+        start_time = time.perf_counter()
+        result = func(*args, **kwargs)
+        end_time = time.perf_counter()
+        _logger.info(f"pulpcore-worker-perf: {func.__name__} took {end_time - start_time}s")
+        return result
+    return wrapper
+
 # The following four constants are current "best guesses".
 # Unless/until we can provide reasonable ways to decide to change their values,
 # they will live as constants instead of "proper" settings.
@@ -131,6 +145,7 @@ class PulpcoreWorker:
             if notification.payload == str(self.task.pk):
                 self.cancel_task = True
 
+    @log_execution_time
     def handle_worker_heartbeat(self):
         """
         Create or update worker heartbeat records.
@@ -192,6 +207,7 @@ class PulpcoreWorker:
     def notify_workers(self):
         self.cursor.execute("NOTIFY pulp_worker_wakeup")
 
+    @log_execution_time
     def cancel_abandoned_task(self, task, final_state, reason=None):
         """Cancel and clean up an abandoned task.
 
@@ -246,6 +262,7 @@ class PulpcoreWorker:
             return False
         return True
 
+    @log_execution_time
     def unblock_tasks(self):
         """Iterate over waiting tasks and mark them unblocked accordingly.
 
@@ -362,6 +379,7 @@ class PulpcoreWorker:
                 # No task found in the for-loop
                 break
 
+    @log_execution_time
     def sleep(self):
         """Wait for signals on the wakeup channel while heart beating."""
 
@@ -492,6 +510,7 @@ class PulpcoreWorker:
                 keep_looping = True
                 self.supervise_task(task)
 
+    @log_execution_time
     def _record_unblocked_waiting_tasks_metric(self):
         now = timezone.now()
         if now > self.last_metric_heartbeat + self.heartbeat_period:
-- 
2.50.1

