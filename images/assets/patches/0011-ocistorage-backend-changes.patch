From 216357d83b3061a2fbbea04a4110199e5a75e98b Mon Sep 17 00:00:00 2001
From: Dennis Kliban <dkliban@redhat.com>
Date: Thu, 7 Nov 2024 15:39:12 -0500
Subject: [PATCH] ocistorage backend changes

---
 pulpcore/app/serializers/domain.py | 16 +++++++++++++++-
 pulpcore/app/settings.py           |  1 +
 pulpcore/constants.py              |  1 +
 pulpcore/content/handler.py        |  2 ++
 4 files changed, 19 insertions(+), 1 deletion(-)

diff --git a/pulpcore/app/serializers/domain.py b/pulpcore/app/serializers/domain.py
index 2fff76bc6..8a8e7699d 100644
--- a/pulpcore/app/serializers/domain.py
+++ b/pulpcore/app/serializers/domain.py
@@ -25,6 +25,7 @@ BACKEND_CHOICES = (
     ("storages.backends.s3boto3.S3Boto3Storage", "Use Amazon S3 as storage"),
     ("storages.backends.azure_storage.AzureStorage", "Use Azure Blob as storage"),
     # ("storages.backends.gcloud.GoogleCloudStorage", "Use Google Cloud as storage"),
+    ("pulp_service.app.storage.OCIStorage", "Use OCI as storage"),
 )
 
 DEFAULT_CONTENT_TYPES = [
@@ -88,6 +89,19 @@ class BaseSettingsClass(HiddenFieldsMixin, serializers.Serializer):
         return storage_class(**validated_data)
 
 
+class OCIStorageSettingsSerializer(BaseSettingsClass):
+    STORAGE_CLASS = "pulp_service.app.storage.OCIStorage"
+    SETTING_MAPPING = {
+        "username": "username",
+        "password": "password",
+        "repository": "repository",
+    }
+
+    username = serializers.CharField(required=True)
+    password = serializers.CharField(required=True)
+    repository = serializers.CharField(required=True)
+
+
 class FileSystemSettingsSerializer(BaseSettingsClass):
     """A Serializer for FileSystem storage settings."""
 
@@ -345,6 +359,7 @@ class StorageSettingsSerializer(serializers.Serializer):
         "storages.backends.s3boto3.S3Boto3Storage": AmazonS3SettingsSerializer,
         "storages.backends.azure_storage.AzureStorage": AzureSettingsSerializer,
         "storages.backends.gcloud.GoogleCloudStorage": GoogleSettingsSerializer,
+        "pulp_service.app.storage.OCIStorage": OCIStorageSettingsSerializer,
     }
 
     def to_representation(self, instance):
@@ -466,7 +481,6 @@ class DomainSerializer(BackendSettingsValidator, ModelSerializer):
         # Validate for update gets called before ViewSet default check
         if self.instance and self.instance.name == "default":
             return data
-
         storage_class = data.get("storage_class") or self.instance.storage_class
         storage_settings = data.get("storage_settings") or self.instance.storage_settings
         self._validate_storage_backend(storage_class, storage_settings)
diff --git a/pulpcore/constants.py b/pulpcore/constants.py
index 89bf87789..344137dcb 100644
--- a/pulpcore/constants.py
+++ b/pulpcore/constants.py
@@ -110,6 +110,7 @@ STORAGE_RESPONSE_MAP = {
     "storages.backends.s3boto3.S3Boto3Storage": S3_RESPONSE_HEADER_MAP,
     "storages.backends.azure_storage.AzureStorage": AZURE_RESPONSE_HEADER_MAP,
     "storages.backends.gcloud.GoogleCloudStorage": GCS_RESPONSE_HEADER_MAP,
+    "pulp_service.app.storage.OCIStorage": S3_RESPONSE_HEADER_MAP,
 }
 
 # Message users receive when attempting to delete a protected repo version
diff --git a/pulpcore/content/handler.py b/pulpcore/content/handler.py
index 23a3b0711..407796f48 100644
--- a/pulpcore/content/handler.py
+++ b/pulpcore/content/handler.py
@@ -1169,6 +1169,8 @@ class Handler:
             "storages.backends.gcloud.GoogleCloudStorage",
         ):
             raise HTTPFound(_build_url(), headers=headers)
+        elif domain.storage_class == "pulp_service.app.storage.OCIStorage":
+            raise HTTPFound(_build_url(http_method=request.method), headers=headers)
         else:
             raise NotImplementedError()
 
-- 
2.49.0

